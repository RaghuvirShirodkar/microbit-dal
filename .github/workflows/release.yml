name: Release

on: [workflow_dispatch]

# on:
#   push:
#     tags:
#       - 'v*'

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - name: Install dependencies
        run: |
          sudo apt-get update && sudo apt-get install python-setuptools  cmake build-essential ninja-build python-dev libffi-dev libssl-dev gcc-arm-none-eabi
          curl https://bootstrap.pypa.io/pip/2.7/get-pip.py --output get-pip.py # Fetch get-pip.py for python 2.7 
          python get-pip.py
          pip install yotta
      - name: Checkout `bluetooth-disabled` branch
        uses: actions/checkout@v3
        with:
          ref: bluetooth-disabled
      - name: Build microbit-dal static libraries for non-Bluetooth devices
        run: |
          yotta target calliope-mini-classic-gcc@https://github.com/calliope-mini/target-calliope-mini-classic-gcc
          yotta --config=./config.json build
      - name: Prepare release
        run: |
          mkdir -p release-prep
          cd build/calliope-mini-classic-gcc/
          cp source/microbit-dal.a ../../release-prep/
          cp ym/ble/source/ble.a ym/ble-nrf51822/source/ble-nrf51822.a ym/mbed-classic/existing/mbed-classic-b.a ym/nrf51-sdk/source/nrf51-sdk.a ../../release-prep
          cd ../../yotta_target/calliope-mini-classic-gcc/
          cp bootloader/* ld/* softdevice/* ../../release-prep
          ls -a ../../release-prep
          echo $PWD
#       - name: Create release
#         id: create_release
#         uses: actions/create-release@v1
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#         with:
#           tag_name: ${{ github.ref }}
#           release_name: Release ${{ github.ref }}
#           draft: false
#           prerelease: false
#       - name: Upload release asset
#         id: upload-release-asset 
#         uses: actions/upload-release-asset@v1
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#         with:
#           upload_url: ${{ steps.create_release.outputs.upload_url }}
#           asset_path: ./arduino-resources.zip
#           asset_name: arduino-resources.zip
#           asset_content_type: application/zip
